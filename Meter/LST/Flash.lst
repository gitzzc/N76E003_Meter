C51 COMPILER V9.50a   FLASH                                                                12/03/2017 23:49:50 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\Output\Flash.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Flash.c LARGE BROWSE INCDIR(..\Include) DEFINE(FOSC_160000) DEBUG OBJE
                    -CTEXTEND PRINT(.\LST\Flash.lst) OBJECT(.\Output\Flash.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 APROM program DATAFLASH (APROM) demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          
  22          #include "bike.h"
  23          //********************************************************************************************************
             -***
  24          /*
  25                  Since the DATAFLASH is in the APROM. Program command is same as program APROM
  26          */
  27          #define     PAGE_ERASE_AP       0x22
  28          #define     BYTE_READ_AP        0x00
  29          #define     BYTE_PROGRAM_AP     0x21
  30          #define     PAGE_SIZE           128
  31          
  32          #define     ERASE_FAIL          0x70
  33          #define     PROGRAM_FAIL        0x71
  34          #define     IAPFF_FAIL          0x72
  35          #define     IAP_PASS            0x00
  36          
  37          //---------------------------------------------------------------
  38          // Following define by customer
  39          // Please confirm the start addresss not over your code size
  40          //---------------------------------------------------------------
  41          #define     DATA_SIZE           256   
  42          #define     DATA_START_ADDR     0x3700                                  
  43          //--------------------------------------------------------------------------------------------------------
             ----/
C51 COMPILER V9.50a   FLASH                                                                12/03/2017 23:49:50 PAGE 2   

  44          
  45          volatile unsigned char code Data_Flash[DATA_SIZE] _at_ DATA_START_ADDR;
  46          //--------------------------------------------------------------------------------------------------------
             ----/
  47          
  48          void IAP_ERROR_LED(void)
  49          {
  50   1              while (1)
  51   1              {
  52   2                      LED_OFF();
  53   2                      Timer1_Delay1ms(100);
  54   2                      LED_ON();
  55   2                      Timer1_Delay1ms(100);
  56   2              }
  57   1      
  58   1      }
  59          
  60          //--------------------------------------------------------------------------------------------------------
             ----/
  61          void Trigger_IAP(void)
  62          {   
  63   1          set_IAPGO;                                                                  //trigger IAP
  64   1          if((CHPCON&SET_BIT6)==SET_BIT6)             // if fail flag is set, toggle error LED and IAP stop
  65   1              {
  66   2                      clr_IAPFF;
  67   2                      IAP_ERROR_LED();
  68   2              }
  69   1      }
  70          /*
  71                          WARNING:
  72                  No matter read or writer, when IAPFF is set 1, 
  73                  this step process is fail. DATA should be ignore.
  74          */
  75          //--------------------------------------------------------------------------------------------------------
             ----/
  76          
  77          /*********************************************************************************************************
             -********
  78          Erase APROM subroutine:
  79                  
  80          
  81          **********************************************************************************************************
             -********/                
  82          void Erase_APROM(void)
  83          {   
  84   1          UINT16 u16Count;
  85   1      
  86   1          set_IAPEN;                                                                  // Enable IAP function
  87   1              IAPFD = 0xFF;                                                           // IMPORTANT !! To erase function must setting IAPFD = 0xFF 
  88   1          IAPCN = PAGE_ERASE_AP;
  89   1          set_APUEN;                                                                  //  APROM modify Enable
  90   1              
  91   1          for(u16Count=0x0000;u16Count<DATA_SIZE/PAGE_SIZE;u16Count++)                //
  92   1          {        
  93   2              IAPAL = LOBYTE(u16Count*PAGE_SIZE + DATA_START_ADDR);
  94   2              IAPAH = HIBYTE(u16Count*PAGE_SIZE + DATA_START_ADDR);
  95   2              Trigger_IAP(); 
  96   2          } 
  97   1          clr_APUEN;
  98   1          clr_IAPEN;
  99   1      }
 100          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.50a   FLASH                                                                12/03/2017 23:49:50 PAGE 3   

             ----
 101          UINT8 Erase_APROM_Verify(void)
 102          {   
 103   1          UINT16 u16Count;
 104   1      
 105   1          for(u16Count=0;u16Count<DATA_SIZE;u16Count++)
 106   1          {   
 107   2              if(Data_Flash[u16Count] != 0xFF)
 108   2                              return 0;
 109   2                              //IAP_ERROR_LED();
 110   2          } 
 111   1                      
 112   1              return 1;
 113   1      }
 114          //--------------------------------------------------------------------------------------------------------
             ----
 115          UINT8 Program_APROM(UINT8 *buf,UINT16 len)
 116          {   
 117   1          UINT16 u16Count;
 118   1              
 119   1              if ( len > DATA_SIZE )
 120   1                      return 0;
 121   1      
 122   1          set_IAPEN;
 123   1          set_APUEN;    
 124   1          IAPAL = LOBYTE(DATA_START_ADDR);
 125   1          IAPAH = HIBYTE(DATA_START_ADDR);
 126   1          IAPCN = BYTE_PROGRAM_AP;
 127   1          
 128   1          for(u16Count=0;u16Count<len;u16Count++)
 129   1          {   
 130   2              IAPFD = buf[u16Count];     
 131   2              Trigger_IAP();
 132   2             
 133   2              IAPAL++;
 134   2              if(IAPAL == 0)
 135   2              {
 136   3                  IAPAH++;
 137   3              }
 138   2          } 
 139   1                      
 140   1          clr_APUEN;
 141   1          clr_IAPEN;
 142   1              return 1;
 143   1      }
 144          //--------------------------------------------------------------------------------------------------------
             ----
 145          UINT8 Program_APROM_Verify(UINT8* buf,UINT16 len)
 146          {   
 147   1          UINT16 u16Count;
 148   1              
 149   1              if ( len > DATA_SIZE ) 
 150   1                      return 0;
 151   1      
 152   1          for(u16Count=0;u16Count<len;u16Count++)
 153   1          {   
 154   2              if(Data_Flash[u16Count]!= buf[u16Count])
 155   2                              IAP_ERROR_LED();
 156   2          } 
 157   1              return 1;
 158   1      }
 159          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.50a   FLASH                                                                12/03/2017 23:49:50 PAGE 4   

             ----
 160          UINT8 FlashWrite(UINT8* cfg,UINT16 len)
 161          {
 162   1              Erase_APROM();
 163   1              if ( Erase_APROM_Verify() == 0 ) return 0;
 164   1              if ( Program_APROM((UINT8*)cfg,len) == 0 ) return 0;
 165   1              if ( Program_APROM_Verify((UINT8*)cfg,len) == 0 ) return 0;
 166   1              return 1;
 167   1      }
 168          
 169          UINT8 FlashRead(UINT8* cfg,UINT16 len)
 170          {
 171   1          UINT16 u16Count;
 172   1      
 173   1              if ( len > DATA_SIZE ) 
 174   1                      return 0;
 175   1              
 176   1              for(u16Count=0;u16Count<len;u16Count++)
 177   1                      cfg[u16Count] = Data_Flash[u16Count];
 178   1              
 179   1              return 1;
 180   1      }
 181          
 182          #if 0
              //--------------------------------------------------------------------------------------------------------
             ----
              void main (void) 
              {
              
                      UINT8 str[16] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
                      
                      Set_All_GPIO_Quasi_Mode;
              //---------toggle GPIO1---------        
                      clr_GPIO1;
                      Timer0_Delay1ms(100);
                      set_GPIO1;
                      Timer0_Delay1ms(100);
                      clr_GPIO1;
                      Timer0_Delay1ms(100);
                      set_GPIO1;
                      Timer0_Delay1ms(100);
              //---------end toggle GPIO1---------
                      
                  Erase_APROM();
                      Erase_APROM_Verify();
                  Program_APROM(str,16);
                  Program_APROM_Verify(str,16);
              
              //---------toggle GPIO1---------        
                      clr_GPIO1;
                      Timer0_Delay1ms(100);
                      set_GPIO1;
                      Timer0_Delay1ms(100);
                      clr_GPIO1;
                      Timer0_Delay1ms(100);
                      set_GPIO1;
                      Timer0_Delay1ms(100);
              //---------end toggle GPIO1---------
              
                  while(1);
              }
              #endif
C51 COMPILER V9.50a   FLASH                                                                12/03/2017 23:49:50 PAGE 5   

 220          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    711    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      26
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
